 public Transform anchor;
     public InstructionsController controller;

     void Update () {
         List<ARHitTestResult> hitResults;
         ARPoint point; 
         float scale; 


         if (Input.touchCount > 0 && anchor != null) {

             var touch = Input.GetTouch(0);
             if (touch.phase == TouchPhase.Began) {.                   // LENS STUDIO ON TOUCH EVENT
                 Vector2 center = new Vector2(Screen.width/2, Screen.height/2); //API LA IRUKU SCREEN HIEGHT AND WIDTH EDUKA LOGICS LAM
                 Vector3 screenPosition = Camera.main.ScreenToViewportPoint(center);  // INTHA REPO LAYE IRUKU LOGIC TO CONVERT SCREEN TO VIEWPORT PONT
                 point.x = screenPosition.x;
                 point.y = screenPosition.y;
                 Vector2 edge = new Vector2(Screen.width, Screen.height/2);
                 Vector3 screenEdge = Camera.main.ScreenToViewportPoint(edge);
                 scale = screenPosition.x - screenEdge.x;

                 hitResults = UnityARSessionNativeInterface.GetARSessionNativeInterface().HitTest( point, 
                     ARHitTestResultType.ARHitTestResultTypeExistingPlaneUsingExtent);
               
                 if (hitResults.Count > 0) { //WE NOT GOIGNT TO DO ANY ALTERSATION TO HOW LENS STUDIO POSITIONS AND ROTATES OBJECT, WE GOING TO FOCUS ON SCALE)
                     anchor.position = UnityARMatrixOps.GetPosition( hitResults[0].worldTransform); // TRY TO GET HIT POINTS FROM LENS STUDIO .. CATCH IS NOT IN THE POSITION OR ROTATION 
                     anchor.rotation = UnityARMatrixOps.GetRotation( hitResults[0].worldTransform); // SAME 
                     anchor.scale = new Vector3(scale, scale, scale);
                 }
             }
         }
     }
